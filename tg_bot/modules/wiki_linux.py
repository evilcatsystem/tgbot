from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram import Update, Bot
from telegram.ext import CommandHandler, CallbackQueryHandler
from tg_bot.modules.sql.top_users_sql import protected

from tg_bot import dispatcher

def linux_glav(bot: Bot, update: Update):
    user = update.effective_user 
    user_id = user.id
    if protected(user_id):
        update.effective_message.delete()
        chat = update.effective_chat
        linux_wiki = [
            [
                InlineKeyboardButton('Arch Linux', callback_data='linux_arch'),
                InlineKeyboardButton('Ubuntu Linux', callback_data='linux_ubuntu')
            ],
            [
                InlineKeyboardButton('Debian Linux', callback_data='linux_debian'),
                InlineKeyboardButton('Gentoo Linux', callback_data='linux_gentoo')
            ],
            [
                InlineKeyboardButton('LFS Linux', callback_data='linux_lfs'),
                InlineKeyboardButton('Kali Linux', callback_data='linux_kali')
            ],
            [
                InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
            ]
        ]
        reply_markup = InlineKeyboardMarkup(linux_wiki, row_width=2)
        bot.send_message(chat.id, "–ü—Ä–∏–≤–µ—Ç –±—Ä–∞—Ç–∏–∫ –ø–∏–Ω–≥–≤–∏–Ω, —á—Ç–æ –∂–µ–ª–∞–µ—à—å?", reply_markup=reply_markup)

def linux_wiki(bot: Bot, update: Update):
    query = update.callback_query
    q = query.data
    
    if q == 'linux_arch':
        arch = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='archlinux.org/download'),
                    InlineKeyboardButton('–í–∏–∫–∏', url='wiki.archlinux.org'),
                    InlineKeyboardButton('Gide install', url='https://clck.ru/N5eWx')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(arch)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[Arch Linux]  –î–ª—è —Å–∞–º—ã—Ö –ø—Ä–∏–≤–µ—Ä"
                                    "–µ–¥–ª–∏–≤—ã—Ö*",
                                reply_markup=reply_markup, parse_mode="Markdown")
    elif q == 'linux_ubuntu':
        ubuntu = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='releases.ubuntu.com'),
                    InlineKeyboardButton('–í–∏–∫–∏', url='help.ubuntu.ru/wiki/–≥–ª–∞–≤–Ω–∞—è')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(ubuntu)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[Ubuntu Linux]   –î–ª—è —Å–∞–º—ã—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö"
                                    "–∫–æ—Ç—è—Ç*",
                                reply_markup=reply_markup,
                                parse_mode="Markdown")

    elif q == 'linux_debian':
        debian = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='debian.org/CD/'),
                    InlineKeyboardButton('–í–∏–∫–∏', url='wiki.debian.org/ru/DebianRussian')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(debian)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[Debian Linux]   –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π "
                                    "—Å–µ—Ä–≤–µ—Ä–æ–≤*",
                                reply_markup=reply_markup,
                                parse_mode="Markdown")

    elif q == 'linux_gentoo':
        gentoo = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='gentoo.org/downloads'),
                    InlineKeyboardButton('Handbook', url='wiki.gentoo.org/wiki/Handbook:Main_Pagecg/ru')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(gentoo)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[Gentoo Linux]   –î–ª—è –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Ü–µ–≤*",
                                reply_markup=reply_markup,
                                parse_mode="Markdown")
    elif q == 'linux_lfs':
        debian = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='linuxfromscratch.org'),
                    InlineKeyboardButton('Russian book', url='book.linuxfromscratch.ru')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(debian)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[LFS Linux]  "
                                "–¢—É—Ç –¥–∞–∂–µ –Ω–µ—á–µ–≥–æ —Å–∫–∞–∑–∞—Ç—å*",
                                reply_markup=reply_markup,
                                parse_mode="Markdown")

    elif q == 'linux_kali':
        debian = [
                [
                    InlineKeyboardButton('–°–∫–∞—á–∞—Ç—å', url='https://www.kali.org/get-kali/'),
                    InlineKeyboardButton('–í–∑–ª–æ–º–∞—Ç—å', url='https://clck.ru/JwL3')
                ],
                [
                    InlineKeyboardButton('üîô', callback_data="linux_infa"),
                    InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
                ]
            ]
        reply_markup = InlineKeyboardMarkup(debian)

        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="*[Kall Linux]   –ù–∞—à–µ –≤—Ä–µ–º—è –ø—Ä–∏—à–ª–æ,"
                                " –º–æ–π –¥—Ä—É–≥*",
                                reply_markup=reply_markup,
                                parse_mode="Markdown")
    
    elif q == 'linux_infa':
        linux_wiki =  [
            [
                InlineKeyboardButton('Arch Linux', callback_data='linux_arch'),
                InlineKeyboardButton('Ubuntu Linux', callback_data='linux_ubuntu')
            ],
            [
                InlineKeyboardButton('Debian Linux', callback_data='linux_debian'),
                InlineKeyboardButton('Gentoo Linux', callback_data='linux_gentoo')
            ],
            [
                InlineKeyboardButton('LFS Linux', callback_data='linux_lfs'),
                InlineKeyboardButton('Kali Linux', callback_data='linux_kali')
            ],
            [
                InlineKeyboardButton('‚ùå', callback_data='linux_delete_message')
            ]
        ]
        reply_markup = InlineKeyboardMarkup(linux_wiki)
        bot.edit_message_text(chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              text="–ü—Ä–∏–≤–µ—Ç –±—Ä–∞—Ç–∏–∫ –ø–∏–Ω–≥–≤–∏–Ω, —á—Ç–æ –∂–µ–ª–∞–µ—à—å?", reply_markup=reply_markup)
    elif q == 'linux_delete_message':
        query.message.delete()


__help__ = "/linux –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –ø–æ –ª–∏–Ω—É–∫—Å—É"

__mod_name__ = "wiki linux"



BROADCAST_HANDLER = CommandHandler("linux", linux_glav)
dispatcher.add_handler(BROADCAST_HANDLER)
linux_callback_handler = CallbackQueryHandler(linux_wiki, pattern=r"linux_")
dispatcher.add_handler(linux_callback_handler)
